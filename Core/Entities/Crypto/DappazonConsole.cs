using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.Web3;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace Core.Entities.Crypto
{
    public class DappazonConsole
    {
        public static async Task Main()
        {
            var url = "http://testchain.nethereum.com:8545";
            //var url = "https://mainnet.infura.io";
            var privateKey = "0x7580e7fb49df1c861f0050fae31c2224c6aba908e116b8da44ee8cd927b990b0";
            var account = new Nethereum.Web3.Accounts.Account(privateKey);
            var web3 = new Web3(account, url);
            
            // Deployment 
            // var dappazonDeployment = new DappazonDeployment();

            // var transactionReceiptDeployment = await web3.Eth.GetContractDeploymentHandler<DappazonDeployment>().SendRequestAndWaitForReceiptAsync(dappazonDeployment);
            // var contractAddress = transactionReceiptDeployment.ContractAddress;
            
            // var contractHandler = web3.Eth.GetContractHandler(contractAddress);

            /** Function: brandExist**/
            /*
            var brandExistFunction = new BrandExistFunction();
            brandExistFunction.BrandId = brandId;
            var brandExistFunctionReturn = await contractHandler.QueryAsync<BrandExistFunction, bool>(brandExistFunction);
            */


            /** Function: brands**/
            /*
            var brandsFunction = new BrandsFunction(); 
            brandsFunction.ReturnValue1 = returnValue1;
            var brandsOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<BrandsFunction, BrandsOutputDTO>(brandsFunction);
            */


            /** Function: buy**/
            /*
            var buyFunction = new BuyFunction();
            buyFunction.Id = id;
            var buyFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(buyFunction);
            */


            /** Function: categories**/
            /*
            var categoriesFunction = new CategoriesFunction(); 
            categoriesFunction.ReturnValue1 = returnValue1;
            var categoriesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<CategoriesFunction, CategoriesOutputDTO>(categoriesFunction);
            */


            /** Function: categoryExist**/
            /*
            var categoryExistFunction = new CategoryExistFunction();
            categoryExistFunction.CategoryId = categoryId;
            var categoryExistFunctionReturn = await contractHandler.QueryAsync<CategoryExistFunction, bool>(categoryExistFunction);
            */


            /** Function: getItem**/
            /*
            var getItemFunction = new GetItemFunction(); 
            getItemFunction.ItemId = itemId;
            var getItemOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetItemFunction, GetItemOutputDTO>(getItemFunction);
            */


            /** Function: getLimitBrands**/
            /*
            var getLimitBrandsFunction = new GetLimitBrandsFunction(); 
            getLimitBrandsFunction.Limit = limit;
            var getLimitBrandsOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetLimitBrandsFunction, GetLimitBrandsOutputDTO>(getLimitBrandsFunction);
            */


            /** Function: getLimitCategories**/
            /*
            var getLimitCategoriesFunction = new GetLimitCategoriesFunction(); 
            getLimitCategoriesFunction.Limit = limit;
            var getLimitCategoriesOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<GetLimitCategoriesFunction, GetLimitCategoriesOutputDTO>(getLimitCategoriesFunction);
            */


            /** Function: isListed**/
            /*
            var isListedFunction = new IsListedFunction();
            isListedFunction.ItemId = itemId;
            var isListedFunctionReturn = await contractHandler.QueryAsync<IsListedFunction, bool>(isListedFunction);
            */


            /** Function: items**/
            /*
            var itemsFunction = new ItemsFunction(); 
            itemsFunction.ReturnValue1 = returnValue1;
            var itemsOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<ItemsFunction, ItemsOutputDTO>(itemsFunction);
            */


            /** Function: itemsCounter**/
            /*
            var itemsCounterFunctionReturn = await contractHandler.QueryAsync<ItemsCounterFunction, BigInteger>();
            */


            /** Function: listItems**/
            /*
            var listItemsFunction = new ListItemsFunction();
            listItemsFunction.Items = items;
            var listItemsFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(listItemsFunction);
            */


            /** Function: orderCount**/
            /*
            var orderCountFunction = new OrderCountFunction();
            orderCountFunction.ReturnValue1 = returnValue1;
            var orderCountFunctionReturn = await contractHandler.QueryAsync<OrderCountFunction, BigInteger>(orderCountFunction);
            */


            /** Function: orders**/
            /*
            var ordersFunction = new OrdersFunction(); 
            ordersFunction.ReturnValue1 = returnValue1;
            ordersFunction.ReturnValue2 = returnValue2;
            var ordersOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<OrdersFunction, OrdersOutputDTO>(ordersFunction);
            */


            /** Function: owner**/
            /*
            var ownerFunctionReturn = await contractHandler.QueryAsync<OwnerFunction, string>();
            */


            /** Function: queryItems**/
            /*
            var queryItemsFunction = new QueryItemsFunction(); 
            queryItemsFunction.Filter = filter;
            var queryItemsOutputDTO = await contractHandler.QueryDeserializingToObjectAsync<QueryItemsFunction, QueryItemsOutputDTO>(queryItemsFunction);
            */


            /** Function: renounceOwnership**/
            /*
            var renounceOwnershipFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync<RenounceOwnershipFunction>();
            */


            /** Function: transferOwnership**/
            /*
            var transferOwnershipFunction = new TransferOwnershipFunction();
            transferOwnershipFunction.NewOwner = newOwner;
            var transferOwnershipFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(transferOwnershipFunction);
            */


            /** Function: unlistItems**/
            /*
            var unlistItemsFunction = new UnlistItemsFunction();
            unlistItemsFunction.ItemIds = itemIds;
            var unlistItemsFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(unlistItemsFunction);
            */


            /** Function: updateBrands**/
            /*
            var updateBrandsFunction = new UpdateBrandsFunction();
            updateBrandsFunction.Brands = brands;
            var updateBrandsFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateBrandsFunction);
            */


            /** Function: updateCategories**/
            /*
            var updateCategoriesFunction = new UpdateCategoriesFunction();
            updateCategoriesFunction.Category = category;
            var updateCategoriesFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync(updateCategoriesFunction);
            */


            /** Function: withdraw**/
            /*
            var withdrawFunctionTxnReceipt = await contractHandler.SendRequestAndWaitForReceiptAsync<WithdrawFunction>();
            */
        }

    }

    public partial class DappazonDeployment : DappazonDeploymentBase
    {
        public DappazonDeployment() : base(BYTECODE) { }
        public DappazonDeployment(string byteCode) : base(byteCode) { }
    }

    public class DappazonDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = "";
        public DappazonDeploymentBase() : base(BYTECODE) { }
        public DappazonDeploymentBase(string byteCode) : base(byteCode) { }

    }

    public partial class BrandExistFunction : BrandExistFunctionBase { }

    [Function("brandExist", "bool")]
    public class BrandExistFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "brandId", 1)]
        public virtual BigInteger BrandId { get; set; }
    }

    public partial class BrandsFunction : BrandsFunctionBase { }

    [Function("brands", typeof(BrandsOutputDTO))]
    public class BrandsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class BuyFunction : BuyFunctionBase { }

    [Function("buy")]
    public class BuyFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_id", 1)]
        public virtual BigInteger Id { get; set; }
    }

    public partial class CategoriesFunction : CategoriesFunctionBase { }

    [Function("categories", typeof(CategoriesOutputDTO))]
    public class CategoriesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class CategoryExistFunction : CategoryExistFunctionBase { }

    [Function("categoryExist", "bool")]
    public class CategoryExistFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "categoryId", 1)]
        public virtual BigInteger CategoryId { get; set; }
    }

    public partial class GetItemFunction : GetItemFunctionBase { }

    [Function("getItem", typeof(GetItemOutputDTO))]
    public class GetItemFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "itemId", 1)]
        public virtual BigInteger ItemId { get; set; }
    }

    public partial class GetLimitBrandsFunction : GetLimitBrandsFunctionBase { }

    [Function("getLimitBrands", typeof(GetLimitBrandsOutputDTO))]
    public class GetLimitBrandsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "limit", 1)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetLimitCategoriesFunction : GetLimitCategoriesFunctionBase { }

    [Function("getLimitCategories", typeof(GetLimitCategoriesOutputDTO))]
    public class GetLimitCategoriesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "limit", 1)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class IsListedFunction : IsListedFunctionBase { }

    [Function("isListed", "bool")]
    public class IsListedFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "itemId", 1)]
        public virtual BigInteger ItemId { get; set; }
    }

    public partial class ItemsFunction : ItemsFunctionBase { }

    [Function("items", typeof(ItemsOutputDTO))]
    public class ItemsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class ItemsCounterFunction : ItemsCounterFunctionBase { }

    [Function("itemsCounter", "uint256")]
    public class ItemsCounterFunctionBase : FunctionMessage
    {

    }

    public partial class ListItemsFunction : ListItemsFunctionBase { }

    [Function("listItems")]
    public class ListItemsFunctionBase : FunctionMessage
    {
        [Parameter("tuple[]", "_items", 1)]
        public virtual List<NewItem> Items { get; set; }
    }

    public partial class OrderCountFunction : OrderCountFunctionBase { }

    [Function("orderCount", "uint256")]
    public class OrderCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class OrdersFunction : OrdersFunctionBase { }

    [Function("orders", typeof(OrdersOutputDTO))]
    public class OrdersFunctionBase : FunctionMessage
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
        [Parameter("uint256", "", 2)]
        public virtual BigInteger ReturnValue2 { get; set; }
    }

    public partial class OwnerFunction : OwnerFunctionBase { }

    [Function("owner", "address")]
    public class OwnerFunctionBase : FunctionMessage
    {

    }

    public partial class QueryItemsFunction : QueryItemsFunctionBase { }

    [Function("queryItems", typeof(QueryItemsOutputDTO))]
    public class QueryItemsFunctionBase : FunctionMessage
    {
        [Parameter("tuple", "filter", 1)]
        public virtual Filter Filter { get; set; }
    }

    public partial class RenounceOwnershipFunction : RenounceOwnershipFunctionBase { }

    [Function("renounceOwnership")]
    public class RenounceOwnershipFunctionBase : FunctionMessage
    {

    }

    public partial class TransferOwnershipFunction : TransferOwnershipFunctionBase { }

    [Function("transferOwnership")]
    public class TransferOwnershipFunctionBase : FunctionMessage
    {
        [Parameter("address", "newOwner", 1)]
        public virtual string NewOwner { get; set; }
    }

    public partial class UnlistItemsFunction : UnlistItemsFunctionBase { }

    [Function("unlistItems")]
    public class UnlistItemsFunctionBase : FunctionMessage
    {
        [Parameter("uint256[]", "_itemIds", 1)]
        public virtual List<BigInteger> ItemIds { get; set; }
    }

    public partial class UpdateBrandsFunction : UpdateBrandsFunctionBase { }

    [Function("updateBrands")]
    public class UpdateBrandsFunctionBase : FunctionMessage
    {
        [Parameter("tuple[]", "_brands", 1)]
        public virtual List<Brand> Brands { get; set; }
    }

    public partial class UpdateCategoriesFunction : UpdateCategoriesFunctionBase { }

    [Function("updateCategories")]
    public class UpdateCategoriesFunctionBase : FunctionMessage
    {
        [Parameter("tuple[]", "_category", 1)]
        public virtual List<Category> Category { get; set; }
    }

    public partial class WithdrawFunction : WithdrawFunctionBase { }

    [Function("withdraw")]
    public class WithdrawFunctionBase : FunctionMessage
    {

    }

    public partial class BuyEventDTO : BuyEventDTOBase { }

    [Event("Buy")]
    public class BuyEventDTOBase : IEventDTO
    {
        [Parameter("address", "buyer", 1, false )]
        public virtual string Buyer { get; set; }
        [Parameter("uint256", "orderId", 2, false )]
        public virtual BigInteger OrderId { get; set; }
        [Parameter("uint256", "itemId", 3, false )]
        public virtual BigInteger ItemId { get; set; }
    }

    public partial class ListItemEventDTO : ListItemEventDTOBase { }

    [Event("ListItem")]
    public class ListItemEventDTOBase : IEventDTO
    {
        [Parameter("string", "name", 1, false )]
        public virtual string Name { get; set; }
        [Parameter("uint256", "cost", 2, false )]
        public virtual BigInteger Cost { get; set; }
        [Parameter("uint256", "quantity", 3, false )]
        public virtual BigInteger Quantity { get; set; }
    }

    public partial class OwnershipTransferredEventDTO : OwnershipTransferredEventDTOBase { }

    [Event("OwnershipTransferred")]
    public class OwnershipTransferredEventDTOBase : IEventDTO
    {
        [Parameter("address", "previousOwner", 1, true )]
        public virtual string PreviousOwner { get; set; }
        [Parameter("address", "newOwner", 2, true )]
        public virtual string NewOwner { get; set; }
    }

    public partial class BrandExistOutputDTO : BrandExistOutputDTOBase { }

    [FunctionOutput]
    public class BrandExistOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class BrandsOutputDTO : BrandsOutputDTOBase { }

    [FunctionOutput]
    public class BrandsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
    }



    public partial class CategoriesOutputDTO : CategoriesOutputDTOBase { }

    [FunctionOutput]
    public class CategoriesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
    }

    public partial class CategoryExistOutputDTO : CategoryExistOutputDTOBase { }

    [FunctionOutput]
    public class CategoryExistOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetItemOutputDTO : GetItemOutputDTOBase { }

    [FunctionOutput]
    public class GetItemOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual Item ReturnValue1 { get; set; }
    }

    public partial class GetLimitBrandsOutputDTO : GetLimitBrandsOutputDTOBase { }

    [FunctionOutput]
    public class GetLimitBrandsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "brandsArray", 1)]
        public virtual List<Brand> BrandsArray { get; set; }
    }

    public partial class GetLimitCategoriesOutputDTO : GetLimitCategoriesOutputDTOBase { }

    [FunctionOutput]
    public class GetLimitCategoriesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "categoriesArray", 1)]
        public virtual List<Category> CategoriesArray { get; set; }
    }

    public partial class IsListedOutputDTO : IsListedOutputDTOBase { }

    [FunctionOutput]
    public class IsListedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class ItemsOutputDTO : ItemsOutputDTOBase { }

    [FunctionOutput]
    public class ItemsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
        [Parameter("tuple", "brand", 3)]
        public virtual Brand Brand { get; set; }
        [Parameter("tuple", "category", 4)]
        public virtual Category Category { get; set; }
        [Parameter("string", "image", 5)]
        public virtual string Image { get; set; }
        [Parameter("string", "description", 6)]
        public virtual string Description { get; set; }
        [Parameter("uint256", "cost", 7)]
        public virtual BigInteger Cost { get; set; }
        [Parameter("uint256", "rating", 8)]
        public virtual BigInteger Rating { get; set; }
        [Parameter("uint256", "stock", 9)]
        public virtual BigInteger Stock { get; set; }
    }

    public partial class ItemsCounterOutputDTO : ItemsCounterOutputDTOBase { }

    [FunctionOutput]
    public class ItemsCounterOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class OrderCountOutputDTO : OrderCountOutputDTOBase { }

    [FunctionOutput]
    public class OrderCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class OrdersOutputDTO : OrdersOutputDTOBase { }

    [FunctionOutput]
    public class OrdersOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "time", 1)]
        public virtual BigInteger Time { get; set; }
        [Parameter("tuple", "item", 2)]
        public virtual Item Item { get; set; }
    }

    public partial class OwnerOutputDTO : OwnerOutputDTOBase { }

    [FunctionOutput]
    public class OwnerOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class QueryItemsOutputDTO : QueryItemsOutputDTOBase { }

    [FunctionOutput]
    public class QueryItemsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "itemsArray", 1)]
        public virtual List<Item> ItemsArray { get; set; }
        [Parameter("tuple", "filterBack", 2)]
        public virtual Filter FilterBack { get; set; }
    }













    public partial class Brand : BrandBase { }

    public class BrandBase 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
    }

    public partial class Category : CategoryBase { }

    public class CategoryBase 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
    }

    public partial class Item : ItemBase { }

    public class ItemBase 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
        [Parameter("tuple", "brand", 3)]
        public virtual Brand Brand { get; set; }
        [Parameter("tuple", "category", 4)]
        public virtual Category Category { get; set; }
        [Parameter("string", "image", 5)]
        public virtual string Image { get; set; }
        [Parameter("string", "description", 6)]
        public virtual string Description { get; set; }
        [Parameter("uint256", "cost", 7)]
        public virtual BigInteger Cost { get; set; }
        [Parameter("uint256", "rating", 8)]
        public virtual BigInteger Rating { get; set; }
        [Parameter("uint256", "stock", 9)]
        public virtual BigInteger Stock { get; set; }
    }

    public partial class NewItem : NewItemBase { }

    public class NewItemBase 
    {
        [Parameter("uint256", "id", 1)]
        public virtual BigInteger Id { get; set; }
        [Parameter("string", "name", 2)]
        public virtual string Name { get; set; }
        [Parameter("uint256", "brandId", 3)]
        public virtual BigInteger BrandId { get; set; }
        [Parameter("uint256", "categoryId", 4)]
        public virtual BigInteger CategoryId { get; set; }
        [Parameter("string", "image", 5)]
        public virtual string Image { get; set; }
        [Parameter("string", "description", 6)]
        public virtual string Description { get; set; }
        [Parameter("uint256", "cost", 7)]
        public virtual BigInteger Cost { get; set; }
        [Parameter("uint256", "rating", 8)]
        public virtual BigInteger Rating { get; set; }
        [Parameter("uint256", "stock", 9)]
        public virtual BigInteger Stock { get; set; }
    }

    public partial class Filter : FilterBase { }

    public class FilterBase 
    {
        [Parameter("uint256", "brandIdSelected", 1)]
        public virtual BigInteger BrandIdSelected { get; set; }
        [Parameter("uint256", "categoryIdSelected", 2)]
        public virtual BigInteger CategoryIdSelected { get; set; }
        [Parameter("string", "sortSelected", 3)]
        public virtual string SortSelected { get; set; }
        [Parameter("uint256", "pageNumber", 4)]
        public virtual BigInteger PageNumber { get; set; }
        [Parameter("uint256", "pageSize", 5)]
        public virtual BigInteger PageSize { get; set; }
        [Parameter("uint256", "itemsCount", 6)]
        public virtual BigInteger ItemsCount { get; set; }
        [Parameter("string", "search", 7)]
        public virtual string Search { get; set; }
    }
}
